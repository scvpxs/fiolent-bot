import telebot
from telebot import types

# –£–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather
TOKEN = '7024914121:AAFFVd1z5ddy3U-1JLVsYih3uLGg4i6uOzI'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
catalog = {
    1: {"name": "–ü–µ–ª—å–º–µ–Ω–∏", "price": 200, "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREp30RkWTJw40TWqVsn4EFjvZyjmEocebwk6OwbTsLAA&s",
        "description": "–û—á–µ–Ω—å –≤–∫—É—Å–Ω—ã–µ –ø–µ–ª—å–º–µ–Ω–∏"},
    2: {"name": "–í–∞—Ä–µ–Ω–∏–∫–∏", "price": 150, "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREp30RkWTJw40TWqVsn4EFjvZyjmEocebwk6OwbTsLAA&s",
        "description": "–°–æ—á–Ω—ã–µ –≤–∞—Ä–µ–Ω–∏–∫–∏"},
    3: {"name": "–ë–ª–∏–Ω—ã", "price": 180, "photo": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREp30RkWTJw40TWqVsn4EFjvZyjmEocebwk6OwbTsLAA&s",
        "description": "–ü—ã—à–Ω—ã–µ –±–ª–∏–Ω—ã"},
    # –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–æ–≤–∞—Ä—ã —Å—é–¥–∞
}

# –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞)
user_baskets = {}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = message.chat.id
    if message.text == '/start':
        send_welcome_message(message)
    elif message.text == 'üçΩ –ú–µ–Ω—é':
        send_catalog_menu(message)
    elif message.text == 'üõí –ö–æ—Ä–∑–∏–Ω–∞':
        show_basket(message)
    elif message.text == 'üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑':
        checkout(message)
    else:
        bot.send_message(user_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.")


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
def send_welcome_message(message):
    user_id = message.chat.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üçΩ –ú–µ–Ω—é"), types.KeyboardButton("üõí –ö–æ—Ä–∑–∏–Ω–∞"))
    markup.add(types.KeyboardButton("üõçÔ∏è –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"))  # –ö–Ω–æ–ø–∫–∞ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
    bot.send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞
def send_catalog_menu(message):
    user_id = message.chat.id
    markup = types.InlineKeyboardMarkup(row_width=1)

    for item_id, item_info in catalog.items():
        item_name = item_info['name']
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞
        markup.add(types.InlineKeyboardButton(item_name, callback_data=f"view_item_{item_id}"))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"))

    bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞:", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∏–∑ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞
def view_catalog_item(user_id, item_id):
    if item_id in catalog:
        item_info = catalog[item_id]
        item_name = item_info['name']
        item_price = item_info['price']
        item_description = item_info['description']
        item_photo = item_info['photo']

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        quantity_in_basket = user_baskets.get(user_id, {}).get(item_id, 0)

        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤ –∫–æ—Ä–∑–∏–Ω–µ
        text = f"<b>{item_name}</b>\n–¶–µ–Ω–∞: {item_price} —Ä—É–±.\n\n{item_description}"
        text += f"\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {quantity_in_basket}"

        markup = types.InlineKeyboardMarkup(row_width=2)
        markup.add(
            types.InlineKeyboardButton("‚ûï", callback_data=f"add_to_basket_{item_id}"),
            types.InlineKeyboardButton("‚ûñ", callback_data=f"remove_from_basket_{item_id}")
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥"
        markup.add(types.InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥", callback_data="return_to_catalog"))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π —Ç–æ–≤–∞—Ä–∞ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        bot.send_photo(user_id, item_photo, caption=text, reply_markup=markup, parse_mode='HTML')
    else:
        bot.send_message(user_id, "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã
def show_basket(message):
    user_id = message.chat.id
    if user_id in user_baskets and user_baskets[user_id]:
        basket_message = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n"
        total_price = 0
        for item_id, quantity in user_baskets[user_id].items():
            item_info = catalog[item_id]
            item_total_price = item_info['price'] * quantity
            basket_message += f"{item_info['name']} - {quantity} —à—Ç. - {item_total_price} —Ä—É–±.\n"
            total_price += item_total_price
        basket_message += f"–ò—Ç–æ–≥–æ: {total_price} —Ä—É–±."

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_basket"))

        bot.send_message(user_id, basket_message, reply_markup=markup)
    else:
        bot.send_message(user_id, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
def clear_basket(user_id):
    if user_id in user_baskets:
        user_baskets[user_id] = {}  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_message(user_id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞.")
    else:
        bot.send_message(user_id, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ —É–∂–µ –ø—É—Å—Ç–∞.")

# –§—É–Ω–∫—Ü–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
def checkout(message):
    user_id = message.chat.id
    if user_id in user_baskets and user_baskets[user_id]:
        total_price = sum(catalog[item_id]['price'] * quantity for item_id, quantity in user_baskets[user_id].items())
        bot.send_message(user_id, f"–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Å—É–º–º—É {total_price} —Ä—É–±. –æ—Ñ–æ—Ä–º–ª–µ–Ω.")
        user_baskets[user_id] = {}  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    else:
        bot.send_message(user_id, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    user_id = call.from_user.id
    if call.data.startswith('view_item_'):
        item_id = int(call.data.replace('view_item_', ''))  # –ü–æ–ª—É—á–∞–µ–º item_id –∏–∑ callback_data
        view_catalog_item(user_id, item_id)
    elif call.data.startswith('add_to_basket_'):
        item_id = int(call.data.replace('add_to_basket_', ''))  # –ü–æ–ª—É—á–∞–µ–º item_id –∏–∑ callback_data
        add_to_basket(user_id, item_id, 'add')  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    elif call.data.startswith('remove_from_basket_'):
        item_id = int(call.data.replace('remove_from_basket_', ''))  # –ü–æ–ª—É—á–∞–µ–º item_id –∏–∑ callback_data
        add_to_basket(user_id, item_id, 'remove')  # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    elif call.data == 'clear_basket':
        clear_basket(user_id)  # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    elif call.data == 'back_to_main_menu':
        send_welcome_message(call.message)
    elif call.data == 'return_to_catalog':
        send_catalog_menu(call.message)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥–∞

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
def add_to_basket(user_id, item_id, action):
    if action == 'add':
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        if user_id not in user_baskets:
            user_baskets[user_id] = {}
        if item_id in user_baskets[user_id]:
            user_baskets[user_id][item_id] += 1
        else:
            user_baskets[user_id][item_id] = 1
    elif action == 'remove':
        # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        if user_id in user_baskets and item_id in user_baskets[user_id] and user_baskets[user_id][item_id] > 0:
            user_baskets[user_id][item_id] -= 1
            if user_baskets[user_id][item_id] == 0:
                del user_baskets[user_id][item_id]

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    view_catalog_item(user_id, item_id)




# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()